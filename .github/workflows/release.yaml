name: Create Release

on:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Create tar archive
        run: |
          mkdir -p release_contents
          mkdir -p release_contents/src
          mkdir -p release_contents/src/test
          cp -r src/* release_contents/src
          cp -r ./src/test/* release_contents/src/test
          cp -r ./.env.example release_contents/.env.example
          cp -r ./.gitignore release_contents/.gitignore
          cp -r ./.prettierrc.mjs release_contents/.prettierrc.mjs
          cp -r ./eslint.config.mjs release_contents/eslint.config.mjs
          cp -r ./LICENSE release_contents/LICENSE
          cp -r ./nest-cli.json release_contents/nest-cli.json
          cp -r ./package.json release_contents/package.json
          cp -r ./README.md release_contents/README.md
          cp -r ./docker-compose.yaml release_contents/docker-compose.yaml
          cp -r ./npm.dockerfile release_contents/npm.dockerfile
          cp -r ./pnpm.dockerfile release_contents/pnpm.dockerfile
          cp -r ./.dockerignore release_contents/.dockerignore
          cp -r ./tsconfig.json release_contents/tsconfig.json
          cp -r ./tsconfig.build.json release_contents/tsconfig.build.json
          tar -czf release.tar.gz -C release_contents .

      - name: Create Release
        run: |
          gh release create "${{ github.ref_name}}" \
            --repo="$GITHUB_REPOSITORY" \
            --title="${GITHUB_REF_NAME#v}" \
            --generate-notes \
            release.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
